[tool.poetry]
name = "voice-assistant"
version = "12.0.0"
description = "AI-powered voice assistant with plugin system"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
    { include = "vacore.py" },
    { include = "jaa.py" },
    { include = "plugins" },
    { include = "utils" },
    { include = "lingua_franca" },
]

[tool.poetry.dependencies]
python = "^3.9"
wikipedia-api = "~0.5.4"
pyttsx3 = "~2.90"
vosk = "~0.3.45"
vosk-tts = "~0.3.52"
termcolor = "~1.1.0"
sounddevice = "*"
soundfile = "*"
pyautogui = "*"
requests = "^2.27.1"
numpy = "^1.21.0"
audioplayer = "*"
python-dateutil = "^2.8.2"
gradio = "~3.28.3"
fsspec = "2023.1.0"
openai = "0.28.0"
elevenlabs = "1.0.3"
uvicorn = {extras = ["standard"], version = "~0.18.3"}
fastapi = "~0.81.0"
starlette = "~0.19.1"
# lingua-franca = "^0.4.3"  # Temporarily disabled due to dependency conflict

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=0",  # Set to 0 for infrastructure setup, increase when adding tests
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*",
    "*/.env/*",
    "*/site-packages/*",
    "setup.py",
    "*/migrations/*",
    "*/config/*",
    "*/static/*",
    "*/templates/*",
    "*/docs/*",
    "*/scripts/*",
    "*/model/*",
    "*/.pytest_cache/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "pass",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"